var $=Object.defineProperty,x=(e,u)=>{for(var a in u)$(e,a,{get:u[a],enumerable:!0})},A={};x(A,{adjConjugate:()=>k,adjConjugations:()=>P,adjDeconjugate:()=>uu});var P=["Present","Prenomial","Negative","Past","NegativePast","ConjunctiveTe","Adverbial","Conditional","TaraConditional","Tari","Noun","StemSou","StemNegativeSou"];function N(e){throw new Error("never?")}function k(e,u,a){if(a){let n=e.slice(0,-1),r=!1;switch(e==="いい"||e==="良い"||e==="よい"?(n=e.startsWith("良")?"良":"よ",r=!0):e.endsWith("ない")&&(r=!0),u){case"Present":return[e];case"Prenomial":return[e];case"Negative":return[n+"くない"];case"Past":return[n+"かった"];case"NegativePast":return[n+"くなかった"];case"ConjunctiveTe":return[n+"く",n+"くて"];case"Adverbial":return[n+"く"];case"Conditional":return[n+"ければ"];case"TaraConditional":return[n+"かったら"];case"Tari":return[n+"かったり"];case"Noun":return[n+"さ"];case"StemSou":return[r?n+"さそう":n+"そう"];case"StemNegativeSou":return[n+"くなさそう"];default:N()}}switch(u){case"Prenomial":return[e+"な"];case"Present":return["だ","です","でございます"].map(n=>e+n);case"Negative":return["ではない","でない","じゃない","ではありません"].map(n=>e+n);case"Past":return["だった","でした"].map(n=>e+n);case"NegativePast":return["ではなかった","でなかった","じゃなかった","ではありませんでした"].map(n=>e+n);case"ConjunctiveTe":return[e+"で"];case"Adverbial":return[e+"に"];case"Conditional":return["なら","ならば"].map(n=>e+n);case"TaraConditional":return["だったら"].map(n=>e+n);case"Tari":return["だったり","でしたり"].map(n=>e+n);case"Noun":return[e+"さ"];case"StemSou":return[e+"そう"];case"StemNegativeSou":return[e+"じゃなさそう"];default:N()}throw new Error("unknown conjugation/iAdjective")}function uu(e,u,a){let n=[];for(let r of P){let s=k(u,r,a);s.includes(e)&&n.push({conjugation:r,result:s})}return n}var y={};x(y,{lookup:()=>eu});var d=e=>e.split(""),M=[d("あいうえお"),d("かきくけこ"),d("がぎぐげご"),d("さしすせそ"),d("ざじずぜぞ"),d("たちつてと"),d("だぢづでど"),d("なにぬねの"),d("はひふへほ"),d("ばびぶべぼ"),d("ぱぴぷぺぽ"),d("まみむめも"),["や","","ゆ","","よ"],d("らりるれろ"),["わ","","","","を"],["ん","","","",""]],O=new Map([]);M.forEach((e,u)=>{e.forEach(a=>{a.length>0&&O.set(a,u)})});function eu(e,u){if(u<0||u>4)throw new Error("vowel must be between 0 and 4");let a=O.get(e);if(typeof a>"u")throw new Error("unknown character");let n=M[a][u];if(n.length===0)throw new Error("vowel for kana does not exist");return n}function U(e){var u=(typeof window<"u"&&window||typeof self<"u"&&self||typeof T<"u"&&T||typeof globalThis<"u"&&globalThis||{}).Object,a=u.create(null),n=!1,r=!1;if(u.defineProperty(a,"__esModule",{value:!0,enumerable:!1,configurable:!0}),e){var s=u.getOwnPropertyNames(e);if(s.forEach(function(t){if(t==="default")r=!0;else if(!n&&t!="__esModule")try{n=e[t]!=null}catch{}u.defineProperty(a,t,{get:function(){return e[t]},enumerable:!0,configurable:!1})}),u.getOwnPropertySymbols){var c=u.getOwnPropertySymbols(e);c.forEach(function(t){u.defineProperty(a,t,{get:function(){return e[t]},enumerable:!1,configurable:!1})})}u.preventExtensions(a),u.seal(a),u.freeze&&u.freeze(a)}return n?a:r?(u.isExtensible(a.default)&&!("default"in a.default)&&u.defineProperty(a.default,"default",{value:a.default,configurable:!1,enumerable:!1}),a.default):a}var T=typeof window<"u"&&window||typeof self<"u"&&self||typeof T<"u"&&T||typeof globalThis<"u"&&globalThis||{},o={},F={get exports(){return o},set exports(e){o=e}},C;Object.defineProperty(o,"__esModule",{value:!0});o.verbDeconjugate=o.conjugateAuxiliaries=o.conjugate=o.conjugateTypeII=o.conjugateTypeI=o.auxiliaries=o.conjugations=void 0;var I=U(typeof y<"u"?y:{});o.conjugations=["Negative","Conjunctive","Dictionary","Conditional","Imperative","Volitional","Te","Ta","Tara","Tari","Zu"];o.auxiliaries=["Potential","Masu","Nai","Tai","Tagaru","Hoshii","Rashii","SoudaHearsay","SoudaConjecture","SeruSaseru","ShortenedCausative","ReruRareru","CausativePassive","ShortenedCausativePassive","Ageru","Sashiageru","Yaru","Morau","Itadaku","Kureru","Kudasaru","TeIru","TeAru","Miru","Iku","Kuru","Oku","Shimau","TeOru"];var ru=[["ある","Negative",""],["ござる","Conjunctive","ござい"],["いらっしゃる","Conjunctive","いらっしゃい"],["いらっしゃる","Conditional","いらっしゃい"],["いらっしゃる","Imperative","いらっしゃい"]],E=new Map([]);for(let[e,u,a]of ru){let n=E.get(e);n?n.set(u,a):E.set(e,new Map([[u,a]]))}var m=new Map(o.conjugations.filter(e=>e!=="Imperative").map((e,u)=>[e,u]));m.set("Zu",(C=m.get("Negative"))!==null&&C!==void 0?C:-1);var au=[["く",["いて","いた","いたら","いたり"]],["ぐ",["いで","いだ","いだら","いだり"]],["す",["して","した","したら","したり"]],["ぬ",["んで","んだ","んだら","んだり"]],["ぶ",["んで","んだ","んだら","んだり"]],["む",["んで","んだ","んだら","んだり"]],["つ",["って","った","ったら","ったり"]],["る",["って","った","ったら","ったり"]],["う",["って","った","ったら","ったり"]]],K=new Map([]);for(let[e,u]of au)K.set(e,u);function w(e,u){{if(e==="する")return _(e,u);if(e==="くる"||e==="来る")return R(e,u);if(e==="だ")return V(e,u);if(e==="です")return H(e,u);if(e.endsWith("くださる")){if(u==="Dictionary")return[e];if(u==="Conjunctive")return[e.slice(0,-2)+"さい"];throw new Error("unknown conjugation for -kudasaru")}let t=E.get(e);if(t&&t.has(u))return[t.get(u)||""]}let a=e.slice(0,-1),n=e.slice(-1),r=m.get(u==="Imperative"?"Conditional":u);if(typeof r>"u")throw new Error("Conjugation not yet implemented");if(r<5)return n==="う"?r===0?[a+"わ"]:[a+I.lookup("あ",r)]:[a+I.lookup(n,r)];let s=r-5,c=K.get(e==="行く"||e==="いく"?"つ":n);if(!c)throw new Error("Unknown verb ending. Is it in dictionary form?");return[a+c[s]]}o.conjugateTypeI=w;function B(e,u){if(e==="する")return _(e,u);if(e==="くる"||e==="来る")return R(e,u);if(e==="だ")return V(e,u);if(e==="です")return H(e,u);let a=e.slice(0,-1);switch(u){case"Negative":case"Zu":return[a];case"Conjunctive":return[a];case"Dictionary":return[e];case"Conditional":return[a+"れ"];case"Imperative":return[a+"ろ",a+"よ"];case"Volitional":return[a+"よう"];case"Te":return[a+"て"];case"Ta":return[a+"た"];case"Tara":return[a+"たら"];case"Tari":return[a+"たり"];default:throw new Error("Unhandled conjugation")}}o.conjugateTypeII=B;function R(e,u){let a="";switch(u){case"Negative":case"Zu":a="こ";break;case"Conjunctive":a="き";break;case"Dictionary":a="くる";break;case"Conditional":a="くれ";break;case"Imperative":a="こい";break;case"Volitional":a="こよう";break;case"Te":a="きて";break;case"Ta":a="きた";break;case"Tara":a="きたら";break;case"Tari":a="きたり";break;default:throw new Error("Unhandled conjugation")}let n=e.slice(0,-1);if(n==="く")return[a];if(n==="来")return["来"+a.slice(1)];throw new Error("Expected input to be 来る or くる")}function _(e,u){switch(u){case"Negative":return["し"];case"Conjunctive":return["し"];case"Dictionary":return["する"];case"Conditional":return["すれ"];case"Imperative":return["しろ","せよ"];case"Volitional":return["しよう"];case"Te":return["して"];case"Ta":return["した"];case"Tara":return["したら"];case"Tari":return["したり"];case"Zu":return["せず"];default:throw new Error("Unhandled conjugation")}}function V(e,u){switch(u){case"Negative":return["でない","ではない","じゃない"];case"Dictionary":return["だ"];case"Conditional":return["なら"];case"Te":return["で"];case"Ta":return["だった"];case"Tara":return["だったら"];case"Tari":return["だったり"];default:throw new Error("Unhandled conjugation")}}function H(e,u){switch(u){case"Negative":return["でありません","ではありません"];case"Dictionary":return["です"];case"Te":return["でして"];case"Ta":return["でした"];case"Tara":return["でしたら"];case"Tari":return["でしたり"];default:throw new Error("Unhandled conjugation")}}function nu(e,u,a=!1){return(e.slice(-1)==="る"&&a?B:w)(e,u)}function i(e,u,a=!1){let n=nu(e,u,a);return(u==="Negative"||u==="Zu")&&e!=="だ"&&e!=="です"?n.push(n[0]+(u==="Negative"?"ない":"ず")):u==="Conjunctive"?n.push(n[0]+"ます"):u==="Conditional"?n.push(n[0]+"ば"):u==="Volitional"&&n.push(n[0]+"う"),n}o.conjugate=i;function b(e,u,a,n=!1){if(u.length===0)return i(e,a,n);if(e==="だ"||e==="です"){if(u.length===1&&u[0]==="Nai"){if(a==="Ta")return e==="だ"?["ではなかった","じゃなかった"]:["ではありませんでした","でありませんでした"];if(a==="Te"&&e==="だ")return["じゃなくて"]}throw new Error("unhandled copula auxiliaries/conjugation")}let r=[e],s=n;for(let[c,t]of u.entries()){let l=c===u.length-1?a:"Dictionary",g=u[c-1];if(c!==u.length-1&&(t==="Masu"||t==="Nai"||t==="Tai"||t=="Hoshii"||t==="Rashii"||t==="SoudaConjecture"||t==="SoudaHearsay"))throw new Error("must be final auxiliary");if(g==="Kuru"){let f=r.map(j=>j.slice(0,-2)),h=p("くる",t,l);r=f.flatMap(j=>h.map(v=>j+v))}else r=r.flatMap(f=>p(f,t,l,s));s=t==="Potential"||t==="SeruSaseru"||t==="ReruRareru"||t==="CausativePassive"||t==="ShortenedCausativePassive"||t==="Ageru"||t==="Sashiageru"||t==="Kureru"||t==="Miru"||t==="TeIru"}return r}o.conjugateAuxiliaries=b;function p(e,u,a,n=!1){if(u==="Potential"){let r=w(e,"Conditional")[0]+"る";return i(r,a,!0)}else if(u==="Masu"){let r=i(e,"Conjunctive",n)[0];switch(a){case"Negative":return[r+"ません",r+"ませんでした"];case"Dictionary":return[r+"ます"];case"Conditional":return[r+"ますれば"];case"Imperative":return[r+"ませ",r+"まし"];case"Volitional":return[r+"ましょう"];case"Te":return[r+"まして"];case"Ta":return[r+"ました"];case"Tara":return[r+"ましたら"];default:throw new Error("Unhandled conjugation")}}else if(u==="Nai"){let r=i(e,"Negative",n)[0];switch(a){case"Negative":return[r+"なくはない"];case"Conjunctive":return[r+"なく"];case"Dictionary":return[r+"ない"];case"Conditional":return[r+"なければ"];case"Te":return[r+"なくて",r+"ないで"];case"Ta":return[r+"なかった"];case"Tara":return[r+"なかったら"];default:throw new Error("Unhandled conjugation")}}else if(u==="Tai"){let r=i(e,"Conjunctive",n)[0];switch(a){case"Negative":return[r+"たくない"];case"Conjunctive":return[r+"たく"];case"Dictionary":return[r+"たい"];case"Conditional":return[r+"たければ"];case"Te":return[r+"たくて"];case"Ta":return[r+"たかった"];case"Tara":return[r+"たかったら"];default:throw new Error("Unhandled conjugation")}}else if(u==="Tagaru"){switch(a){case"Conditional":case"Imperative":case"Volitional":case"Tari":throw new Error("Unhandled conjugation")}let r=i(e,"Conjunctive",n);return i("たがる",a,!1).map(s=>r[0]+s)}else if(u==="Hoshii"){let r=i(e,"Te",n)[0];switch(a){case"Negative":return[r+"ほしくない"];case"Conjunctive":return[r+"ほしく"];case"Dictionary":return[r+"ほしい"];case"Conditional":return[r+"ほしければ"];case"Te":return[r+"ほしくて"];case"Ta":return[r+"ほしかった"];case"Tara":return[r+"ほしかったら"];default:throw new Error("Unhandled conjugation")}}else if(u==="Rashii"){let r=i(e,"Ta",n)[0],s=e,c=t=>[r,s].map(l=>l+t);switch(a){case"Negative":return[p(e,"Nai","Dictionary")[0]+"らしい"];case"Conjunctive":return c("らしく");case"Dictionary":return c("らしい");case"Te":return c("らしくて");default:throw new Error("Unhandled conjugation")}}else if(u==="SoudaHearsay"){let r=i(e,"Ta",n)[0],s=e,c=t=>[r,s].map(l=>l+t);switch(a){case"Dictionary":return c("そうだ");default:throw new Error("Unhandled conjugation")}}else if(u==="SoudaConjecture"){let r=i(e,"Conjunctive",n)[0];switch(a){case"Dictionary":return[r+"そうだ",r+"そうです"];case"Conditional":return[r+"そうなら"];case"Ta":return[r+"そうだった",r+"そうでした"];default:throw new Error("Unhandled conjugation")}}else if(u==="SeruSaseru"||u==="ShortenedCausative"){if(a==="Tara"||a==="Tari")throw new Error("Unhandled conjugation");let r;return e==="来る"||e==="くる"?r=(e[0]==="来"?"来":"こ")+"させる":e==="する"?r="させる":n?r=B(e,"Negative")[0]+"させる":r=w(e,"Negative")[0]+"せる",u==="ShortenedCausative"?(r=r.slice(0,-2)+"す",i(r,a,!1)):i(r,a,!0)}else if(u==="ReruRareru"){if(a==="Conditional"||a==="Imperative"||a==="Volitional"||a==="Tara"||a==="Tari")throw new Error("Unhandled conjugation");let r;return e==="来る"||e==="くる"?r=(e[0]==="来"?"来":"こ")+"られる":e==="する"?r="される":n?r=B(e,"Negative")[0]+"られる":r=w(e,"Negative")[0]+"れる",i(r,a,!0)}else if(u==="CausativePassive"){let r=p(e,"SeruSaseru","Negative",n)[0]+"られる";return i(r,a,!0)}else if(u==="ShortenedCausativePassive"){let r=p(e,"ShortenedCausative","Negative",n)[0]+"れる";return i(r,a,!0)}else if(u==="Ageru"||u==="Sashiageru"||u==="Yaru"||u==="Morau"||u==="Itadaku"||u==="Kureru"||u==="Kudasaru"||u==="TeIru"||u==="TeAru"||u==="Miru"||u==="Iku"||u==="Kuru"||u==="Oku"||u==="TeOru"){let r=i(e,"Te",n)[0],s=u==="Ageru"?["あげる"]:u==="Sashiageru"?["差し上げる","さしあげる"]:u==="Yaru"?["やる"]:u==="Morau"?["もらう"]:u==="Itadaku"?["いただく"]:u==="Kureru"?["くれる"]:u==="Kudasaru"?["くださる"]:u==="TeIru"?["いる","る"]:u==="TeAru"?["ある"]:u==="Miru"?["みる"]:u==="Iku"?["いく"]:u==="Kuru"?["くる"]:u==="Oku"?["おく"]:u==="TeOru"?["おる"]:[];if(!s[0])throw new Error("missing ternary");if(u==="Kuru")return i(s[0],a).map(l=>r+l);let c=u==="Ageru"||u==="Sashiageru"||u==="Kureru"||u==="TeIru"||u==="Miru",t=s.map(l=>r+l);return u==="Oku"&&t.push(r.slice(0,-1)+"とく"),t.flatMap(l=>i(l,a,c))}else if(u==="Shimau"){let r=i(e,"Te",n)[0],s=i(r+"しまう",a),c=r.slice(0,-1);if(r.endsWith("て")){let g=i(c+"ちゃう",a),f=i(c+"ちまう",a);return s.concat(g).concat(f)}let t=i(c+"じまう",a),l=i(c+"ぢまう",a);return s.concat(t).concat(l)}throw new Error("Unhandled auxiliary")}function tu(e,u,a=!1,n=1/0){let r=[];for(let g of o.conjugations)try{let f=i(u,g,a);f.includes(e)&&r.push({conjugation:g,auxiliaries:[],result:f})}catch{}if(n<=0)return r;for(let g of o.auxiliaries)for(let f of o.conjugations)try{let h=p(u,g,f,a);h.includes(e)&&r.push({conjugation:f,auxiliaries:[g],result:h})}catch{}if(n<=1)return r;let s=["Ageru","Sashiageru","Yaru","Morau","Itadaku","Kureru","Kudasaru","Miru","Iku","Kuru","Oku","Shimau","TeIru","TeAru","TeOru","Potential","ReruRareru","SeruSaseru"],c=["Masu","SoudaConjecture","SoudaHearsay","TeIru"];for(let g of s)for(let f of c)for(let h of o.conjugations){let j=[g,f];try{let v=b(u,j,h,a);v.includes(e)&&r.push({conjugation:h,auxiliaries:j,result:v})}catch{}}if(n<=2)return r;let t=["SeruSaseru","ReruRareru"],l=["Masu"];for(let g of t)for(let f of s)for(let h of l)for(let j of o.conjugations){let v=[g,f,h];try{let D=b(u,v,j,a);D.includes(e)&&r.push({conjugation:j,auxiliaries:v,result:D})}catch{}}return r}o.verbDeconjugate=tu;var S=U(typeof A<"u"?A:{});Object.defineProperty(o,"adjConjugations",{enumerable:!0,get:function(){return S.adjConjugations}});Object.defineProperty(o,"adjConjugate",{enumerable:!0,get:function(){return S.adjConjugate}});Object.defineProperty(o,"adjDeconjugate",{enumerable:!0,get:function(){return S.adjDeconjugate}});var Z,W,Y,z,q,G,J,L,Q,X;Object.isExtensible(F.exports)&&(Z=F.exports.verbDeconjugate,W=F.exports.conjugateAuxiliaries,Y=F.exports.conjugate,z=F.exports.conjugateTypeII,q=F.exports.conjugateTypeI,G=F.exports.auxiliaries,J=F.exports.conjugations,L=F.exports.adjConjugations,Q=F.exports.adjConjugate,X=F.exports.adjDeconjugate);const iu=Object.freeze(Object.defineProperty({__proto__:null,get adjConjugate(){return Q},get adjConjugations(){return L},get adjDeconjugate(){return X},get auxiliaries(){return G},get conjugate(){return Y},get conjugateAuxiliaries(){return W},get conjugateTypeI(){return q},get conjugateTypeII(){return z},get conjugations(){return J},get verbDeconjugate(){return Z}},Symbol.toStringTag,{value:"Module"}));export{Z as Q,W as X,Q as a,X as i,iu as k,L as n,J as r,G as t};
